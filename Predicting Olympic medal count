import pandas as pd
teams = pd.read_csv("teams.csv")
#print(teams.describe())
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error
import numpy as np


columns_to_keep = ['year', "athletes", "age", "prev_medals", "medals"] # Replace with your column names
filtered_df = teams[columns_to_keep]
correlation_matrix = filtered_df.corr()
sns.lmplot(x="athletes", y="medals", data=teams, fit_reg=True, ci=None)
teams[teams.isnull().any(axis=1)]
teams.dropna(inplace=True)

#assigning the model parameters
train = teams[teams["year"] < 2012].copy()
test = teams[teams["year"] >= 2012].copy()
predictors = ["athletes", "prev_medals"]
target = "medals"
reg.fit(train[predictors], train[target])
predictions = reg.predict(test[predictors])
test["predictions"]= predictions
test.loc[test["predictions"] < 0 , "predictions"] = 0
test["predictions"] = test["predictions"].round()
error = mean_absolute_error(test["medals"], test["predictions"])
errors = (test["medals"] - test["predictions"]).abs()
error_by_team = errors.groupby(test["team"]).mean()
medals_by_team = test["medals"].groupby(test["team"]).mean()

#computing error
error_ratio = error_by_team/ medals_by_team
error_ratio[~pd.isnull(error_ratio)]
error_ratio =error_ratio[np.isfinite(error_ratio)]
error_ratio.sort_values(ascending=False)
